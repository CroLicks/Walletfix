{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","styles/globalStyles.js","redux/blockchain/blockchain.helpers.js","redux/blockchain/blockchainActions.js","assets/images/metamaskLogo.webp","assets/images/cronosLogo.png","components/modal/walletsOptionModal.js","mint.js","redux/stakeData/dataActions.js","redux/data/dataActions2.js","navbar.js","redux/stakeBlockchain/blockchainActions.js","staking.js","data.js","image/hero.gif","home.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","tokenContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","isApprovedForAll","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","fetch","headers","Accept","configResponse","json","getState","methods","call","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","getProvider","wallet","cronosWallet","metamaskWallet","provider","ethereum","window","connector","DeFiWeb3Connector","supportedChainIds","rpc","pollingInterval","activate","connectSuccess","connectFailed","connectM","abiResponse","abi","CONFIG","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","on","updateAccount","location","reload","NAME","connect","providerType","abiResponseERC20","abiERC20","SmartContractERC20Obj","TOKEN_ADDRESS","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","width","height","flexDirection","backgroundColor","borderRadius","boxShadow","shadows","padding","spacing","modalHeading","color","fontSize","modalOpenBtn","border","cursor","fontWeight","walletBtn","walletLogo","walletName","paddingLeft","WalletsModal","classes","useDispatch","React","useState","open","setOpen","handleClose","onClick","className","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","e","preventDefault","src","metamaskLogo","alt","cronosLogo","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledImg","img","StyledLink","a","Grid","Mint","balance","rewards","hasApproved","input","len","useSelector","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","SET_CONFIG","getData","getConfig","config","useEffect","style","background","textAlign","target","href","length","substring","Number","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","console","log","allowance","then","mint","send","to","from","value","once","err","receipt","approve","claimNFTs","transform","Navbar","openNav","setOpenNav","balanceOf","response","getAllRewards","isConnected","Staking","setClaiming","setStaking","setUnstaking","tokenId","setTokenId","setTimeout","getDataM","isApproved","unStake","unstakeByIds","Response","setApprovalForAll","claim","claimAll","handleChange","parseInt","split","slice","onChange","placeholder","required","stakeByIds","stake","unstakeAll","Image","id","home","marginRight","map","item","App","exact","path","render","props","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.edb1a7ac.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  tokenContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        tokenContract: action.payload.tokenContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  totalSupply: 0,\r\n  isApprovedForAll: false,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalSupply: action.payload.totalSupply,\r\n        isApprovedForAll: action.payload.isApprovedForAll,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\nexport const fetchData = () => {\r\n\r\n  // let approved; \r\n  return async (dispatch) => {\r\n    const configResponse = await fetch(\"/stakeConfig/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          totalSupply,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      // console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--primary);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\nexport const _Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 70%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 18px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","import { DeFiWeb3Connector } from \"deficonnect\";\r\n\r\nexport const getProvider = (wallet) => {\r\n  if (wallet == \"cronos\") return cronosWallet;\r\n  return metamaskWallet;\r\n};\r\n\r\nconst metamaskWallet = () => {\r\n  let provider = null;\r\n  const { ethereum } = window;\r\n  if (ethereum) {\r\n    provider = ethereum;\r\n  }\r\n  return provider;\r\n};\r\n\r\nconst cronosWallet = async () => {\r\n  try {\r\n    const connector = new DeFiWeb3Connector({\r\n      supportedChainIds: [25, 56, 3, 1],\r\n      rpc: {\r\n        25: \"https://evm-cronos.crypto.org\",\r\n        56: \"https://bsc-dataseed1.binance.org\",\r\n        3: \"https://ropsten.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\",\r\n        1: \"https://mainnet.infura.io/v3/20e078e98de64af88b26c6b1bb47f822\",\r\n      },\r\n      pollingInterval: 15000,\r\n    });\r\n\r\n    await connector.activate();\r\n    const provider = await connector.getProvider();\r\n    return provider;\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\nimport { getProvider } from \"./blockchain.helpers\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connectM = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const abiResponse = await fetch(\"/config/abi.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const abi = await abiResponse.json();\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        if (networkId == CONFIG.NETWORK.ID) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            abi,\r\n            CONFIG.CONTRACT_ADDRESS\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const connect = (providerType = \"metamask\") => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const abiResponse = await fetch(\"/config/abi.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const abi = await abiResponse.json();\r\n\r\n    const abiResponseERC20 = await fetch(\"/config/erc20abi.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const abiERC20 = await abiResponseERC20.json();\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n\r\n    const provider = await getProvider(providerType)();\r\n     //const { ethereum } = window;\r\n     //const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (provider) {\r\n      Web3EthContract.setProvider(provider);\r\n      let web3 = new Web3(provider);\r\n      try {\r\n        const accounts = await provider.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await provider.request({\r\n          method: \"net_version\",\r\n        });\r\n        if (networkId == CONFIG.NETWORK.ID) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            abi,\r\n            CONFIG.CONTRACT_ADDRESS\r\n          );\r\n          const SmartContractERC20Obj = new Web3EthContract(\r\n            abiERC20,\r\n            CONFIG.TOKEN_ADDRESS\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              tokenContract: SmartContractERC20Obj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          provider.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          provider.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/metamaskLogo.eff97b70.webp\";","export default __webpack_public_path__ + \"static/media/cronosLogo.17357c58.png\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\r\nimport metamaskLogo from \"../../assets/images/metamaskLogo.webp\";\r\nimport cronosLogo from \"../../assets/images/cronosLogo.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    width: \"250px\",\r\n    height: \"200px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"flexStart\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"#182132\",\r\n    borderRadius: \"12px\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  modalHeading: {\r\n    color: \"#fff\",\r\n    fontSize: \"22px\",\r\n  },\r\n  modalOpenBtn: {\r\n    backgroundColor: \"transparent\",\r\n    border: \"none\",\r\n    color: \"#fff\",\r\n    fontSize: \"16px\",\r\n    cursor: \"pointer\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  walletBtn: {\r\n    width: \"auto\",\r\n    display: \"flex\",\r\n    justifyContent: \"left\",\r\n    alignItems: \"center\",\r\n    borderRadius: \"8px\",\r\n    padding: \"3px 6px\",\r\n    backgroundColor: \"#272E43\",\r\n    cursor: \"pointer\",\r\n  },\r\n  walletLogo: {\r\n    width: \"30px\",\r\n    height: \"30px;\",\r\n  },\r\n  walletName: {\r\n    color: \"#fff\",\r\n    paddingLeft: \"14px\",\r\n  },\r\n}));\r\n\r\nconst WalletsModal = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        type=\"button\"\r\n        onClick={handleOpen}\r\n        className={classes.modalOpenBtn}\r\n      >\r\n        Connect Wallet\r\n      </button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h1 className={classes.modalHeading}>Choose wallet</h1>\r\n            <div\r\n              className={classes.walletBtn}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                handleClose();\r\n                dispatch(connect());\r\n              }}\r\n            >\r\n              <div>\r\n                <img\r\n                  className={classes.walletLogo}\r\n                  src={metamaskLogo}\r\n                  alt=\"metamask\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <p className={classes.walletName}>MetaMask</p>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={classes.walletBtn}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                handleClose();\r\n                dispatch(connect(\"cronos\"));\r\n              }}\r\n            >\r\n              <div>\r\n                <img\r\n                  className={classes.walletLogo}\r\n                  src={cronosLogo}\r\n                  alt=\"cronosLogo\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <p className={classes.walletName}>Cronos Defi</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WalletsModal;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//import { connectM } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport WalletsModal from \"./components/modal/walletsOptionModal\";\r\n\r\nconst truncate = (input, len) =>\r\n  input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 50px;\r\n  border: none;\r\n  background: linear-gradient(to bottom, #673ab7 0%, #cc00ff 100%);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: var(--secondary-text);\r\n  width: 100px;\r\n  cursor: pointer;\r\n  ${'' /* box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3); */}\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 100%;\r\n  border: none;\r\n  background: linear-gradient(to bottom, #673ab7 0%, #cc00ff 100%);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: var(--primary-text);\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  ${'' /* box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3); */}\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  width: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\r\n  border: 0px dashed var(--secondary);\r\n  background-color: var(--accent);\r\n  border-radius: 100%;\r\n  width: 200px;\r\n  @media (min-width: 900px) {\r\n    width: 250px;\r\n  }\r\n  @media (min-width: 1000px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: var(--secondary);\r\n  text-decoration: none;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  gap: 10px;\r\n  width: 100%;\r\n  justify-self: center;\r\n  justify-content: center;\r\n`;\r\n\r\nfunction Mint() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\r\n  const [mintAmount, setMintAmount] = useState(1);\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n  });\r\n\r\n  const claimNFTs = () => {\r\n    let cost = CONFIG.WEI_COST;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount);\r\n    let totalGasLimit = String(gasLimit * mintAmount);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    setClaimingNft(true);\r\n\r\n    blockchain.tokenContract.methods\r\n      .allowance(blockchain.account, CONFIG.CONTRACT_ADDRESS)\r\n      .call()\r\n      .then((allowance) => {\r\n        // If allowance is above 1000000000000000000 we know it's already been set\r\n        if (allowance > 1000000000000000000n) {\r\n          console.log(\"Allowance already set\");\r\n          blockchain.smartContract.methods\r\n            .mint(blockchain.account, mintAmount, 0)\r\n            .send({\r\n              gasLimit: String(totalGasLimit),\r\n              to: CONFIG.CONTRACT_ADDRESS,\r\n              from: blockchain.account,\r\n              value: totalCostWei,\r\n            })\r\n            .once(\"error\", (err) => {\r\n              console.log(err);\r\n              setFeedback(\r\n                \"Sorry, something went wrong please try again later.\"\r\n              );\r\n              setClaimingNft(false);\r\n            })\r\n            .then((receipt) => {\r\n              console.log(receipt);\r\n              setFeedback(\r\n                `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Ebisusbay to view it.`\r\n              );\r\n              setClaimingNft(false);\r\n              dispatch(fetchData(blockchain.account));\r\n            });\r\n        } else {\r\n          // Allowance is not set, so we need to set it\r\n          blockchain.tokenContract.methods\r\n            .approve(CONFIG.CONTRACT_ADDRESS, \"1000000000000000000000000\")\r\n            .send({\r\n              gasLimit: String(totalGasLimit),\r\n              from: blockchain.account,\r\n            })\r\n            .once(\"error\", (err) => {\r\n              console.log(err);\r\n              setFeedback(\r\n                \"Sorry, something went wrong please try again later.\"\r\n              );\r\n              setClaimingNft(false);\r\n            })\r\n            .then((receipt) => {\r\n              console.log(receipt);\r\n              setClaimingNft(true);\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  const decrementMintAmount = () => {\r\n    let newMintAmount = mintAmount - 1;\r\n    if (newMintAmount < 1) {\r\n      newMintAmount = 1;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const incrementMintAmount = () => {\r\n    let newMintAmount = mintAmount + 1;\r\n    if (newMintAmount > 10) {\r\n      newMintAmount = 10;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <s.Screen>\r\n      <s.Container\r\n        flex={1}\r\n        ai={\"center\"}\r\n       // style={{ padding: 60, background: \"linear-gradient(to bottom, #673ab7 0%, #cc00ff 100%)\"}}\r\n       style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\r\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\r\n      >\r\n        {/* <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} /> */}\r\n        <s.SpacerSmall />\r\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\r\n          { <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n            <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\r\n          </s.Container> }\r\n          <s.SpacerLarge />\r\n          <s.Container\r\n            flex={2}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{\r\n              background: \"linear-gradient(to bottom, #13943a73 0%, #13943a73 100%)\",\r\n              padding: 24,\r\n              borderRadius: 30,\r\n              // border: \"4px dashed var(--secondary)\",\r\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\r\n            }}\r\n          >\r\n            <s.TextTitle\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontSize: 50,\r\n                fontWeight: \"bold\",\r\n                color: \"var(--accent-text)\",\r\n              }}\r\n            >\r\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\r\n            </s.TextTitle>\r\n            <s.TextDescription\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"var(--primary-text)\",\r\n              }}\r\n            >\r\n              <s.TextTitle target={\"_blank\"} href={CONFIG.SCAN_LINK}\r\n              style={{color:'#673ab7'}}>\r\n                {truncate(CONFIG.CONTRACT_ADDRESS, 20)}\r\n                \r\n              </s.TextTitle>\r\n            </s.TextDescription>\r\n            <s.SpacerSmall />\r\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\r\n              <>\r\n                <s.TextTitle\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  The sale has ended.\r\n                </s.TextTitle>\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  You can still find {CONFIG.NFT_NAME} on\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n                  {CONFIG.MARKETPLACE}\r\n                </StyledLink>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <s.TextTitle\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                CroLicker Club is an exclusive collection of 750 randomly generated NFTs on the Cronos Network.<br/>\r\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\r\n                  {CONFIG.NETWORK.SYMBOL}.\r\n                </s.TextTitle>\r\n                <s.SpacerXSmall />\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  Excluding gas fees.\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                       Connect to the {CONFIG.NETWORK.NAME} network\r\n                    </s.TextDescription>\r\n                    <s.SpacerSmall />\r\n\r\n                    <Grid>\r\n                      {/* connect wallet modal button */}\r\n                      <StyledButton>\r\n                        <WalletsModal />\r\n                      </StyledButton>\r\n                    </Grid>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            color: \"var(--accent-text)\",\r\n                          }}\r\n                        >\r\n                          {blockchain.errorMsg}\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  <>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      {feedback}\r\n                      </s.TextDescription>\r\n                    <s.SpacerMedium />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledRoundButton\r\n                        style={{ lineHeight: 0.4 }}\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          decrementMintAmount();\r\n                        }}\r\n                      >\r\n                        -\r\n                      </StyledRoundButton>\r\n                      <s.SpacerMedium />\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"var(--accent-text)\",\r\n                        }}\r\n                      >\r\n                        {mintAmount}\r\n                      </s.TextDescription>\r\n                      <s.SpacerMedium />\r\n                      <StyledRoundButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          incrementMintAmount();\r\n                        }}\r\n                      >\r\n                        +\r\n                      </StyledRoundButton>\r\n                    </s.Container>\r\n                    <s.SpacerSmall />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          claimNFTs();\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\r\n                      </StyledButton>\r\n                    </s.Container>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <s.SpacerMedium />\r\n          </s.Container>\r\n          <s.SpacerLarge />\r\n          { <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n            <StyledImg\r\n              alt={\"example\"}\r\n              src={\"/config/images/example.gif\"}\r\n              style={{ transform: \"scaleX(-1)\" }}\r\n            />\r\n          </s.Container> }\r\n        </ResponsiveWrapper>\r\n        <s.SpacerMedium />\r\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"var(--primary-text)\",\r\n            }}\r\n          >\r\n            Please make sure you are connected to the right network (\r\n            {CONFIG.NETWORK.NAME} testnet) and the correct address. Please note:\r\n            Once you make the purchase, you cannot undo this action.\r\n          </s.TextDescription>\r\n          <s.SpacerSmall />\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"var(--primary-text)\",\r\n            }}\r\n          >\r\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\r\n            successfully mint your NFT. We recommend that you don't lower the\r\n            gas limit.\r\n          </s.TextDescription>\r\n        </s.Container>\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default Mint;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\nexport let balance;\r\nexport let rewards;\r\nexport const fetchData = () => {\r\n\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n\r\n      let balanceOf = await store\r\n      .getState()\r\n      .blockchain.smartContract.methods.balanceOf(store.getState().blockchain.account)\r\n        .call()\r\n        .then((response) => {\r\n          balance = response;\r\n        })\r\n\r\n      let getAllRewards = await store\r\n      .getState()\r\n      .blockchain.smartContract.methods.getAllRewards(store.getState().blockchain.account)\r\n      .call()\r\n      .then((response)=>{\r\n        rewards = response;\r\n      })\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          balanceOf,\r\n          getAllRewards\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\nexport let hasApproved; \r\nexport const fetchDataM = () => {\r\n\r\n  // let approved; \r\n  return async (dispatch) => {\r\n    const configResponse = await fetch(\"/stakeConfig/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let isApproved = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.isApprovedForAll(store.getState().blockchain.account, CONFIG.CONTRACT_ADDRESS)\r\n        .call()\r\n        .then((response) => {\r\n          hasApproved = response;\r\n        })\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          isApproved\r\n        })\r\n      );\r\n    } catch (err) {\r\n      // console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};","import { HashLink as Link } from \"react-router-hash-link\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\n//import { connectM } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport WalletsModal from \"./components/modal/walletsOptionModal\";\r\n\r\nimport \"./styles/navbar.css\";\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  getData();\r\n\r\n  // OPEN SIDEBAR\r\n  const [openNav, setOpenNav] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"nav-wrap\">\r\n        <Link className=\"logo\" to=\"/\">\r\n          <img\r\n            src=\"https://i.ibb.co/6Z35BBF/Base-Body-Transparent.png\"\r\n            width=\"63\"\r\n            height=\"60\"\r\n          />\r\n        </Link>\r\n        <ul  className={openNav ? \"active\" : \"\"}>\r\n          <li\r\n            className=\"mintbox\"\r\n            //  onClick={(e) => {\r\n            //  e.preventDefault();\r\n            //  dispatch(WalletsModal());\r\n            // }}\r\n            onClick={() => setOpenNav(false)}\r\n          >\r\n            <Link to=\"/\">HOME</Link>\r\n          </li>\r\n          <li className=\"stakebox\" onClick={() => setOpenNav(false)}>\r\n            <Link to=\"/staking\">STAKE</Link>\r\n          </li>\r\n          <li className=\"mintbox\" onClick={() => setOpenNav(false)}>\r\n            <Link to=\"/mint\">MINT</Link>\r\n          </li>\r\n          <a href=\"https://crolicks.gitbook.io/crolick/\" className=\"button3\" onClick={() => setOpenNav(false)}>\r\n            DOCS\r\n          </a>\r\n        </ul>\r\n\r\n        <div className=\"hamburger\" onClick={() => setOpenNav(!openNav)}>\r\n          <input className=\"checkbox\" type=\"checkbox\" onClick={() => setOpenNav(!openNav)}/>\r\n          <div\r\n            className={openNav ? \"hamburger_lines active\" : \"hamburger_lines\"}\r\n            onClick={() => setOpenNav(!openNav)}\r\n          >\r\n            <span className=\"line line1\" onClick={() => setOpenNav(!openNav)}></span>\r\n            <span className=\"line line2\" onClick={() => setOpenNav(!openNav)}></span>\r\n            <span className=\"line line3\" onClick={() => setOpenNav(!openNav)}></span>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n// log\r\nimport { fetchData } from \"../stakeData/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\nexport let isConnected = false;\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const abiResponse = await fetch(\"/stakeConfig/abi.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const abi = await abiResponse.json();\r\n    const configResponse = await fetch(\"/stakeConfig/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        if (networkId == CONFIG.NETWORK.ID) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            abi,\r\n            CONFIG.CONTRACT_ADDRESS\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          isConnected = true;\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\r\n          isConnected = false;\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n         isConnected = false;\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n       isConnected = false;\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};","import React, { useEffect, useState} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connectM } from \"./redux/blockchain/blockchainActions\";\r\nimport { connect, isConnected } from \"./redux/stakeBlockchain/blockchainActions\";\r\nimport { fetchData, balance, rewards} from \"./redux/stakeData/dataActions\";\r\nimport {fetchDataM, hasApproved } from \"./redux/data/dataActions2\";\r\nimport WalletsModal from \"./components/modal/walletsOptionModal\";\r\nimport styled from \"styled-components\";\r\nimport * as s from \"./styles/globalStyles\";\r\n\r\nimport \"./styles/stake.css\";\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 50px;\r\n  border: none;\r\n  background: linear-gradient(to bottom, #0ba4b8 0%, #0ba4b8 100%);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: var(--secondary-text);\r\n  width: 100px;\r\n  cursor: pointer;\r\n  ${'' /* box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3); */}\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  gap: 10px;\r\n  width: 100%;\r\n  justify-self: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\n\r\n\r\nconst Staking = () => {\r\n    const dispatch = useDispatch();\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const data = useSelector((state) => state.data);\r\n    const [feedback, setFeedback] = useState(\"STAKE\");\r\n    const [claiming, setClaiming] = useState(false)\r\n    const [staking, setStaking] = useState(false);\r\n    const [unstaking, setUnstaking] = useState(false);\r\n    const [hasStaked, setHasStaked] = useState(false);\r\n    const [_stake, _unStake] = useState(\"STAKE\");\r\n    const account = blockchain.account;\r\n    const [tokenId, setTokenId] = useState([]);\r\n    const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n  });\r\n  useEffect(() => {\r\n    dispatch(connectM());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      hasApproved ? dispatch(connect()) : dispatch(connectM());\r\n    }, 3000);\r\n  }, []);\r\n    const getConfig = async () => {\r\n    const configResponse = await fetch(\"/stakeConfig/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n        SET_CONFIG(config);\r\n    };\r\n\r\n    const getDataM = () => {\r\n        if (account !== \"\" && blockchain.smartContract !== null) {\r\n            dispatch(fetchDataM())\r\n        }\r\n    };\r\n    const getData = () => {\r\n        if (account !== \"\" && blockchain.smartContract !== null) {\r\n            dispatch(fetchData())\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getConfig();\r\n    }, []);\r\n    useEffect(() => {\r\n        getDataM();\r\n        getData();\r\n    }, [account]);\r\n\r\n    const stake = (tokenId) => {\r\n        setStaking(true);\r\n        setFeedback(\"BUSY\")\r\n        dispatch(connect())\r\n        blockchain.smartContract.methods.stakeByIds([tokenId])\r\n            .send({\r\n                to: CONFIG.CONTRACT_ADDRESS,\r\n                from: account\r\n            })\r\n            .once(\"error\", (err) => {\r\n                console.log(err)\r\n                setStaking(false)\r\n            })\r\n            .then((Response)=>{\r\n                setStaking(false)\r\n            })\r\n        \r\n        setFeedback(\"STAKE\")   \r\n    }\r\n\r\n\r\n    const unStake = async (tokenId) => {\r\n        setUnstaking(true)\r\n        dispatch(connect())\r\n        blockchain.smartContract.methods.unstakeByIds([tokenId])\r\n            .send({\r\n                to: CONFIG.CONTRACT_ADDRESS,\r\n                from: account\r\n            })\r\n            .once(\"error\", (err) => {\r\n                console.log(err)\r\n                setUnstaking(false)\r\n            })\r\n            .then((Response)=>{\r\n                setUnstaking(false)\r\n            })\r\n    }\r\n\r\n    const unstakeAll = () => {\r\n        setUnstaking(true)\r\n        dispatch(connect())\r\n        blockchain.smartContract.methods.unstakeAll()\r\n            .send({\r\n                to: CONFIG.CONTRACT_ADDRESS,\r\n                from: account\r\n            })\r\n            .once(\"error\", (err) => {\r\n                console.log(err)\r\n                setUnstaking(false)\r\n            })\r\n            .then((Response)=>{\r\n                setUnstaking(false)\r\n            })                \r\n    }\r\n    \r\n    const approve = async () => {\r\n       // dispatch(WalletsModal());\r\n       dispatch(connectM());\r\n        await blockchain.smartContract.methods\r\n        .setApprovalForAll(CONFIG.CONTRACT_ADDRESS, true)\r\n        .send({\r\n            to: CONFIG.CONTRACT_ADDRESS,\r\n            from: account\r\n        })\r\n        dispatch(connect())\r\n    }\r\n\r\n    const claim = async (tokenId) => {\r\n        setClaiming(true)\r\n        dispatch(connect())\r\n        await blockchain.smartContract.methods.claimAll()\r\n        .send({\r\n            to: CONFIG.CONTRACT_ADDRESS,\r\n            from: account\r\n        })\r\n            .once(\"error\", (err) => {\r\n                console.log(err)\r\n                setClaiming(false)\r\n            })\r\n            .then((Response)=>{\r\n                setClaiming(false)\r\n            })\r\n    }\r\n    const handleChange = (e) =>{\r\n        e.preventDefault();\r\n        setTokenId(parseInt(e.target.value.split(\" \")));\r\n    }\r\n\r\n    return ( \r\n        <main className=\"stake-app\">\r\n            <h1 style={{color: \"#08a5b9\"}}>STAKE</h1>\r\n            <h2>Stake Your CroLicker Club To Earn $LICK Tokens</h2>\r\n            <button \r\n                            className=\"connect-btn\" \r\n                            onClick={(e) => {\r\n                                !isConnected ? dispatch(connectM()) : e.preventDefault();\r\n                              }}\r\n                            >\r\n                              {!isConnected ? \"Connect Wallet\" : account.slice(0, 10)}\r\n                            </button>\r\n          \r\n            <div className=\"card-container\">\r\n                <div>\r\n                    <div>\r\n                        <p>Stake CroLicker Club NFT</p>\r\n                        <p>Earn $LICK</p>\r\n                    </div>\r\n                    <blockquote className=\"reward\"><span>BALANCE</span>\r\n                    {' '}\r\n                    {balance / 10 ** 18}\r\n                    {' '}$LICK\r\n                    </blockquote>\r\n                     <blockquote className=\"reward\"><span>REWARDS</span>\r\n                    {' '}\r\n                    {rewards / 10 ** 18}\r\n                    {' '}$LICK\r\n                    </blockquote>\r\n                    <form className=\"form\" onChange={handleChange}>\r\n                       <input\r\n                            type=\"all\"\r\n                            placeholder=\"Enter TokenId\"\r\n                            className=\"\"\r\n                            required\r\n                        />\r\n\r\n\r\n                        <button \r\n                            className=\"btn stake-btn\" \r\n                            onClick={hasApproved ? (e) => {\r\n                                e.preventDefault()\r\n                                stake(tokenId)\r\n                                } : \r\n                                (e) => {\r\n                                e.preventDefault()\r\n                                approve(tokenId)\r\n                                }}\r\n                                >\r\n                            {hasApproved ? \"STAKE\" : \"APPROVE\"}\r\n                        </button>\r\n                    </form>\r\n                    <form className=\"form\" onChange={handleChange}>\r\n                        <input\r\n                            type=\"all\"\r\n                            placeholder=\"Enter TokenId\"\r\n                            className=\"\"\r\n                            required\r\n                        />\r\n                        <button \r\n                            className=\"btn stake-btn\" \r\n                            onClick={(e)=> {\r\n                                e.preventDefault()\r\n                                unStake(tokenId)\r\n                            }}>\r\n                            UNSTAKE\r\n                        </button>\r\n                    </form>\r\n                    <div>\r\n                        <button \r\n                            className=\"btn\"\r\n                            onClick={claim}>\r\n                            CLAIM LICK\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <button \r\n                            className=\"btn mb-5\"\r\n                            onClick={unstakeAll}>\r\n                            UNSTAKE ALL\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </main>\r\n    );\r\n}\r\nexport default Staking ;\r\n","export const Image = [{\r\n        id: 1,\r\n        img: \"https://i.ibb.co/2MWhSXb/1.jpg\",\r\n\r\n    },\r\n    {\r\n        id: 2,\r\n        img: \"https://i.ibb.co/m0HQKRR/7.jpg\",\r\n    },\r\n    {\r\n        id: 3,\r\n        img: \"https://i.ibb.co/XYjDFrm/14.jpg\",\r\n    },\r\n\r\n\r\n    {\r\n        id: 4,\r\n        img: \"https://i.ibb.co/qjytL31/2.jpg\",\r\n\r\n    },\r\n\r\n    {\r\n        id: 5,\r\n        img: \"https://i.ibb.co/3mpCg36/491.png\",\r\n\r\n    },\r\n\r\n    {\r\n        id: 6,\r\n        img: \"https://i.ibb.co/syxnjTF/4.jpg\",\r\n    },\r\n    {\r\n        id: 7,\r\n        img: \"https://i.ibb.co/jvq6fZT/5.jpg\",\r\n    },\r\n    {\r\n        id: 8,\r\n        img: \"https://i.ibb.co/dPrDXcZ/6.jpg\",\r\n    },\r\n];\r\n\r\n\r\n{\r\n    /* <img src=\"https://i.ibb.co/56jtMfR/IMG-4-B9-ED0-B03-B8-E-8.jpg\" alt=\"IMG-4-B9-ED0-B03-B8-E-8\" border=\"0\">\r\n    <img src=\"https://i.ibb.co/4mVpgVS/IMG-4-B9-ED0-B03-B8-E-9.jpg\" alt=\"IMG-4-B9-ED0-B03-B8-E-9\" border=\"0\">\r\n    <img src=\"https://i.ibb.co/Ws4yZBJ/IMG-4-B9-ED0-B03-B8-E-12.jpg\" alt=\"IMG-4-B9-ED0-B03-B8-E-12\" border=\"0\">\r\n    <img src=\"https://i.ibb.co/5KhKvQC/IMG-4-B9-ED0-B03-B8-E-13.jpg\" alt=\"IMG-4-B9-ED0-B03-B8-E-13\" border=\"0\">\r\n    <img src=\"https://i.ibb.co/HNwgS0g/IMG-4-B9-ED0-B03-B8-E-14.jpg\" alt=\"IMG-4-B9-ED0-B03-B8-E-14\" border=\"0\"></img> */\r\n}","export default __webpack_public_path__ + \"static/media/hero.970bd19d.gif\";","import React from 'react'\r\nimport { HashLink as Link } from 'react-router-hash-link'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connectM } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchDataM } from \"./redux/data/dataActions\";\r\nimport \"./image/hero.gif\";\r\nimport './styles/home.css';\r\nimport { Image } from \"./data\"\r\n\r\nconst home = () => {\r\n  return (\r\n    <div className=\"homeContainer\">\r\n    <div className=\"intro\">\r\n    <p className=\"h01\">CroLick Club</p>\r\n    </div>\r\n    <div className=\"hero\">\r\n    <div className=\"svgcont\">\r\n        <img src=\"https://i.ibb.co/vB78YYk/Base-Body-Transparent.png\" alt=\"\" className=\"heroimg\" />\r\n    </div>\r\n    <div className=\"herotext\">\r\n\r\n    <p className=\"h02\">Earn With CroLick</p>\r\n    <div className=\"text\">\r\n    <p>Stake your CroLicker NFT to earn $LICK Tokens which </p>\r\n    <p>is 1-1 to $WCRO, Holding $CROL rewards holders with</p>\r\n    <p>USDT from protocol profits.</p>\r\n\r\n    </div>\r\n    <a href=\"https://mm.finance/swap?outputCurrency=0x5927d05691329503cdb375992862834fe0cea1f0\" className=\"button2\">Buy $CROL</a>\r\n    <a href=\"https://app.ebisusbay.com/collection/crolicker-club\" className=\"button2222\">Buy NFT</a>\r\n    </div>\r\n    </div>\r\n    <div>\r\n-\r\n\r\n    <div className=\"homeContainer\">\r\n    <div className=\"hero2\">\r\n\r\n    <div className=\"herotext2\">\r\n\r\n    <p className=\"h022\">Join The Community</p>\r\n    <div className=\"text2\">\r\n    <p>Stake your CroLicker Club NFT to earn $LICK Tokens</p>\r\n    <p>Holding $CROL rewards holders with USDT.</p>\r\n\r\n    </div>\r\n\r\n    </div>\r\n    <a href=\"https://discord.gg/VwG8CRZRxD\" className=\"button22\"> <img src='https://i.ibb.co/X58fcRL/discord1-1.png' width='20px' height='20px' style={{ marginRight: '10px' }} />Discord</a>\r\n    <a href=\"http://t.me/cro_lick\" className=\"button222\"> <img src='https://i.ibb.co/XsKR0VQ/discord1.png' width='20px' height='20px' style={{ marginRight: '10px' }} />Telegram</a>\r\n    <div className=\"svgcont2\">\r\n        <img src=\"https://i.ibb.co/6R4vkQp/ezgif-com-gif-maker-1.gif\" alt=\"\" className=\"heroimg\" />\r\n    </div>\r\n\r\n\r\n    </div>\r\n    </div>\r\n\r\n\r\n\r\n    <h1 className=\"container\"></h1>\r\n        <div className=\"carousel\">\r\n        <div className=\"image-list\">\r\n                {Image.map ((item) => (\r\n                <img key={item.id} src={item.img} className=\"caroimg\" />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"link\">\r\n    <Link className=\"stake\" to=\"/staking\">Stake</Link>\r\n    <Link className=\"mint\" to=\"/mint\">Mint</Link>\r\n    </div>\r\n    <div className=\"footer\">CroLick Is Built On The Cronos Network</div>\r\n        {/* <li className=\"mintbox\" onClick={(e) => {\r\n                    e.preventDefault();\r\n                    dispatch(connectM());\r\n                }}>\r\n                <Link to=\"/mint\">MINT</Link>\r\n                </li> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default home","import { HashRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Mint from './mint'\r\nimport Navbar from './navbar'\r\nimport Staking from './staking'\r\nimport Home from './home'\r\n\r\nconst App = () => {\r\n  return (\r\n   <Router>\r\n\t\t\t<main>\r\n        <Navbar />\t\t\t\r\n        <Switch>\r\n        <Route exact path=\"/\"\r\n            render={(props)=>\r\n              (\r\n                <Home {...props} \r\n                  \r\n                />\r\n              )\r\n            }\r\n          />\r\n          <Route exact path=\"/mint\"\r\n            render={(props)=>\r\n              (\r\n                <Mint {...props} \r\n                  \r\n                />\r\n              )\r\n            }\r\n          />\r\n          <Route path=\"/staking\"\r\n            render={(props) =>\r\n              (\r\n                <Staking {...props}\r\n                  \r\n                />\r\n              )\r\n            }\r\n          />\r\n        </Switch>\r\n\t\t\t</main>\r\n\t\t</Router>\r\n  )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}